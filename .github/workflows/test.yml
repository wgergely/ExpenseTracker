name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  packages: read

env:
  DOCKER_IMAGE: ghcr.io/wgergely/expensetracker:latest
  WORKSPACE_DIR: C:/workspace

jobs:
  test:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1) Try to restore a previously saved image.tar
      - name: Restore image cache
        id: cache
        uses: actions/cache@v3
        with:
          path: image.tar
          key: ${{ runner.os }}-docker-image-${{ env.DOCKER_IMAGE }}
          restore-keys: |
            ${{ runner.os }}-docker-image-${{ env.DOCKER_IMAGE }}-

      # 2) If image.tar existed, load it; otherwise pull & save it for next time
      - name: Pull or load Docker image
        shell: pwsh
        run: |
          if (Test-Path image.tar) {
            Write-Host "Loading image from cache…"
            docker load --input image.tar
          } else {
            Write-Host "Pulling image from registry…"
            docker pull ${{ env.DOCKER_IMAGE }}
            docker save --output image.tar ${{ env.DOCKER_IMAGE }}
          }

      - name: Run unit tests in container
        shell: pwsh
        env:
          TEST_CLIENT_SECRET_ENV_KEY: ${{ secrets.TEST_CLIENT_SECRET_ENV_KEY }}
          TEST_SERVICE_ACCOUNT_CREDS_ENV_KEY: ${{ secrets.TEST_SERVICE_ACCOUNT_CREDS_ENV_KEY }}
          TEST_SPREADHSEET_ID_ENV_KEY: ${{ secrets.TEST_SPREADHSEET_ID_ENV_KEY }}
          TEST_SPREADHSEET_NAME_ENV_KEY: ${{ secrets.TEST_SPREADHSEET_NAME_ENV_KEY }}
        run: |
          docker run --rm `
            --mount "type=bind,source=${{ github.workspace }},target=${{ env.WORKSPACE_DIR }}" `
            -w "${{ env.WORKSPACE_DIR }}" `
            --env TEST_CLIENT_SECRET_ENV_KEY `
            --env TEST_SERVICE_ACCOUNT_CREDS_ENV_KEY `
            --env TEST_SPREADHSEET_ID_ENV_KEY `
            --env TEST_SPREADHSEET_NAME_ENV_KEY `
            ${{ env.DOCKER_IMAGE }} `
            python -m unittest

