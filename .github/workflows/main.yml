name: CI – Build, Push & Package

on:
  # Trigger on pushes to main, PRs against main, or manual dispatch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    # Use a Windows runner to support Windows containers
    runs-on: windows-latest
    env:
      # Lowercase the owner stays dynamic, repo name must be lowercase manually
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/expensetracker

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Fetch repo into GITHUB_WORKSPACE

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2  # Authenticate Docker to GHCR
        with:
          registry: ghcr.io
          username: ${{ github.actor }}  # GITHUB_TOKEN has write rights
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Docker image (with layer cache)
        uses: docker/build-push-action@v4  # Build, cache, and push
        with:
          context: .                   # Repo root
          file: Dockerfile            # Path to Dockerfile
          push: true                  # Push tags after build
          tags: |
            ${{ env.IMAGE_NAME }}:latest           # Update ‘latest’
            ${{ env.IMAGE_NAME }}:${{ github.sha }} # SHA for reproducibility
          cache-from: |
            type=registry,ref=${{ env.IMAGE_NAME }}:cache  # Pull cached layers
          cache-to: |
            type=registry,ref=${{ env.IMAGE_NAME }}:cache,mode=max  # Push cache

      - name: Run build script in container
        run: |
          # Use the SHA-tagged image to compile binaries
          docker run --rm \
            --mount type=bind,source="${{ github.workspace }}",target=C:\workspace \
            -w C:\workspace \
            ${{ env.IMAGE_NAME }}:${{ github.sha }} \
            powershell -NoLogo -ExecutionPolicy Bypass \
                       -File .\app\build.ps1 \
                       -Config Release \
                       -BuildDir C:\workspace

      - name: Build documentation in container
        run: |
          # Same image to build HTML docs via Sphinx
          docker run --rm \
            --mount type=bind,source="${{ github.workspace }}",target=C:\workspace \
            -w C:\workspace \
            ${{ env.IMAGE_NAME }}:${{ github.sha }} \
            powershell -NoLogo -ExecutionPolicy Bypass \
                       -Command "sphinx-build -M html docs docs\_build"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3  # Persist compiled binaries
        with:
          name: binaries
          path: app/build/install/**

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v3  # Persist generated HTML docs
        with:
          name: docs
          path: docs/_build/html/**
