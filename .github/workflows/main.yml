name: CI â€“ Build, Push & Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: windows-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/expensetracker
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Windows container image
        run: |
          docker build `
            --file Dockerfile `
            --platform windows/amd64 `
            --tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} `
            --tag ${{ env.IMAGE_NAME }}:latest `
            .

      - name: Push both image tags
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.IMAGE_NAME }}:latest

      - name: Run build script in container
        run: |
          docker run --rm `
            --mount type=bind,source="${{ github.workspace }}",target=C:\workspace `
            -w C:\workspace `
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} `
            powershell -NoLogo -ExecutionPolicy Bypass `
                       -File .\app\build.ps1 `
                       -Config Release `
                       -BuildDir C:\workspace

      - name: Build documentation in container
        run: |
          docker run --rm `
            --mount type=bind,source="${{ github.workspace }}",target=C:\workspace `
            -w C:\workspace `
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} `
            powershell -NoLogo -ExecutionPolicy Bypass `
                       -Command "sphinx-build -M html docs docs\_build"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ env.IMAGE_TAG }}
          path: app/build/install/**
          if-no-files-found: error
          compression-level: 0
          retention-days: 7

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-${{ env.IMAGE_TAG }}
          path: docs/_build/html/**
          if-no-files-found: error
          retention-days: 7
